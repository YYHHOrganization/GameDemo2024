using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;

namespace SplineMesh {
    /// <summary>
    /// Example of component to show the deformation of a mesh in a changing
    /// interval in spline space.
    /// 
    /// This component is only for demo purpose and is not intended to be used as-is.
    /// </summary>
    [RequireComponent(typeof(Spline))]
    public class ExampleContortAlong : MonoBehaviour {
        private Spline spline;
        private float rate = 0;
        public MeshBender MeshBender;

        [HideInInspector]
        public GameObject generated;

        public Mesh mesh;
        public Material material;
        public Vector3 rotation;
        public Vector3 scale;
        public float _TargetScale;
        public float DurationInSecond;
        [Range(0, 1)]
        [SerializeField] float _Lerp;

        //private void Update()
        //{

        //    if (generated != null && _Lerp<1)
        //    {
        //        MeshBender.Source = MeshBender.Source.Scale(scale.x, scale.y, scale.z);
        //        MeshBender.SetInterval(spline, spline.Length * _Lerp);
        //        MeshBender.ComputeIfNeeded();
        //    }
        //}

        public void ScaleMesh(Vector3 scale)
        {
            MeshBender.Source = MeshBender.Source.Scale(scale.x, scale.y, scale.z);
        }

        public void Contort(float lerp) {
            if (generated != null) {
                MeshBender.SetInterval(spline, spline.Length * lerp);
                MeshBender.ComputeIfNeeded();
            }
        }

        public void Init() {
            string generatedName = "generated by " + GetType().Name;
            var generatedTranform = transform.Find(generatedName);
            generated = generatedTranform != null ? generatedTranform.gameObject : UOUtility.Create(generatedName, gameObject,
                typeof(MeshFilter),
                typeof(MeshRenderer),
                typeof(MeshBender));

            generated.GetComponent<MeshRenderer>().material = material;

            MeshBender = generated.GetComponent<MeshBender>();
            spline = GetComponent<Spline>();

            MeshBender.Source = SourceMesh.Build(mesh)
                .Rotate(Quaternion.Euler(rotation))
                .Scale(scale);
            MeshBender.Mode = MeshBender.FillingMode.Once;
            MeshBender.SetInterval(spline, 0);
        }
    }
}
